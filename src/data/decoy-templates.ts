// 伪装文本模板

export interface DecoyTemplate {
  id: string;
  name: string;
  content: string;
}

function getDate() {
  const now = new Date();
  return now.toLocaleDateString('zh-CN', { year: 'numeric', month: '2-digit', day: '2-digit' });
}

export const decoyTemplates: DecoyTemplate[] = [
  {
    id: 'daily-report',
    name: '日报',
    content: `# 工作日报（${getDate()}）

## 今日完成
- 完成用户需求分析文档的撰写
- 参与产品评审会议，讨论下一版本功能规划
- 优化数据库查询性能，提升响应速度约30%
- 修复生产环境Bug #1234，已上线验证

## 明日计划
- 开始新模块的技术方案设计
- 与设计师沟通UI细节
- 准备周例会汇报材料
- Code Review 团队成员提交的代码

## 风险与阻塞
- 第三方API接口响应较慢，可能影响用户体验
- 测试环境资源不足，需要扩容

## 需求支持
- 需要DBA协助优化索引设计
- 希望获得更多测试设备用于兼容性测试`,
  },
  {
    id: 'weekly-report',
    name: '周报',
    content: `# 工作周报（第${Math.ceil((new Date().getDate()) / 7)}周）

## 本周工作总结
本周主要完成了核心模块的开发工作，包括用户认证系统的重构、数据缓存机制的优化以及前端组件库的更新。同时协助团队解决了多个技术难题，整体进展顺利。

### 主要成果
1. 用户认证系统重构完成，支持多因素认证
2. 实现Redis缓存层，系统响应速度提升40%
3. 更新10+个前端组件，提升代码复用率
4. 完成单元测试覆盖率提升至75%

### 数据指标
- 完成功能点：8个
- 解决Bug数量：12个
- 代码提交次数：23次
- Code Review：15次

## 下周计划
1. 启动新项目的技术调研
2. 完成API接口文档编写
3. 参与架构设计评审
4. 协助新人完成开发环境搭建

## 问题与建议
- 建议优化开发流程，减少重复性工作
- 希望增加技术分享会，促进团队知识共享`,
  },
  {
    id: 'prd',
    name: 'PRD文档',
    content: `# 产品需求文档（PRD）

## 文档信息
- **产品名称**：企业协同办公平台
- **版本号**：V2.0
- **文档作者**：产品经理
- **创建日期**：${getDate()}
- **审核状态**：待审核

## 一、需求背景
随着公司业务快速发展，现有办公系统已无法满足日益增长的协同办公需求。本次升级旨在提升团队协作效率，优化用户体验，增强系统稳定性。

## 二、需求目标
1. 提升系统响应速度，页面加载时间缩短50%
2. 新增实时协作功能，支持多人同时编辑
3. 优化移动端体验，提升移动端使用率
4. 增强数据安全性，符合企业信息安全标准

## 三、核心功能
### 3.1 实时协作
- 支持文档多人实时编辑
- 显示协作者光标位置
- 提供版本历史记录
- 支持评论和批注

### 3.2 消息通知
- 实时推送系统消息
- 支持@提及功能
- 消息已读/未读状态
- 消息搜索和归档

### 3.3 文件管理
- 云端存储，自动同步
- 支持文件夹层级管理
- 文件版本控制
- 权限精细化管理

## 四、技术方案
- 前端：React + TypeScript
- 后端：Node.js + Express
- 数据库：MongoDB + Redis
- 实时通信：WebSocket

## 五、项目排期
- 需求评审：第1周
- 技术设计：第2周
- 开发实现：第3-6周
- 测试优化：第7周
- 上线发布：第8周

## 六、风险评估
1. 技术风险：实时协作功能技术复杂度较高
2. 时间风险：开发周期紧张，需合理分配资源
3. 兼容性风险：需要兼容旧版本数据

## 七、验收标准
- 功能完整性：100%实现需求功能
- 性能指标：响应时间<200ms
- 稳定性：系统可用性>99.9%
- 用户满意度：>85%`,
  },
  {
    id: 'meeting',
    name: '会议纪要',
    content: `# 会议纪要

## 会议基本信息
- **会议主题**：产品规划评审会
- **会议时间**：${getDate()} 14:00-16:00
- **会议地点**：3楼会议室 / 线上会议
- **主持人**：张经理
- **记录人**：李工程师
- **参会人员**：产品团队、技术团队、设计团队

## 会议议程
1. Q4季度工作总结（30分钟）
2. 新产品功能讨论（60分钟）
3. 技术方案评审（30分钟）

## 会议内容

### 一、Q4季度工作总结
- 完成既定目标的85%，整体进展良好
- 用户活跃度提升20%，达到预期
- 技术债务有所积累，需要在Q1进行优化
- 团队协作效率有显著提升

### 二、新产品功能讨论
**讨论要点：**
1. 实时协作功能
   - 技术可行性：经过验证，技术方案可行
   - 开发周期：预计6周完成
   - 资源需求：需要2名前端、2名后端工程师

2. 移动端优化
   - 优先级：高
   - 目标：提升移动端使用率至50%
   - 关键指标：页面加载速度、操作流畅度

3. 数据安全增强
   - 实施数据加密
   - 完善权限管理体系
   - 定期安全审计

### 三、技术方案评审
- 前端架构升级方案通过
- 数据库优化方案需进一步细化
- 部署方案待补充容灾设计

## 决议事项
1. **立即执行**
   - 启动实时协作功能开发（负责人：王工）
   - 开始移动端优化调研（负责人：李工）

2. **本周完成**
   - 完成技术方案细化文档
   - 提交资源需求申请

3. **下周跟进**
   - 组织技术分享会
   - 进行第二轮需求评审

## 待办事项
| 事项 | 负责人 | 截止日期 | 状态 |
|------|--------|----------|------|
| 技术方案文档 | 王工 | 本周五 | 进行中 |
| 原型设计 | 设计团队 | 下周三 | 未开始 |
| 资源协调 | 张经理 | 本周内 | 进行中 |

## 下次会议
- 时间：下周三 14:00
- 议题：技术方案终审`,
  },
  {
    id: 'okr',
    name: 'OKR',
    content: `# 个人OKR（Q1 2024）

## Objective 1：提升产品核心指标
**关键成果（Key Results）：**
- KR1：用户日活跃度提升25%（当前进度：15%）
- KR2：系统响应时间降低至200ms以内（当前：350ms）
- KR3：用户满意度评分提升至4.5分以上（当前：4.2分）

**当前状态**：正常推进
**信心指数**：7/10

### 具体行动计划
- 优化前端性能，实施代码分割和懒加载
- 改进数据库查询效率，添加必要的索引
- 收集用户反馈，快速迭代产品功能
- 建立性能监控体系

---

## Objective 2：提升技术能力
**关键成果（Key Results）：**
- KR1：完成3个技术分享，帮助团队提升（当前完成：1个）
- KR2：学习并实践2项新技术，应用到项目中（当前：1项）
- KR3：Code Review质量评分达到优秀（当前：良好）

**当前状态**：需要加速
**信心指数**：6/10

### 具体行动计划
- 每月至少一次技术分享
- 深入学习微前端和WebAssembly技术
- 提高Code Review的深度和质量
- 参与开源项目贡献

---

## Objective 3：团队协作优化
**关键成果（Key Results）：**
- KR1：跨部门协作项目按时交付率达到95%（当前：80%）
- KR2：团队新人培养计划完成度100%（当前：60%）
- KR3：流程优化建议落地3个以上（当前：1个）

**当前状态**：正常推进
**信心指数**：8/10

### 具体行动计划
- 建立跨部门沟通机制，定期同步进度
- 完善新人培训材料，安排mentor
- 识别流程痛点，提出改进方案
- 推动工具和流程的标准化

---

## 本周重点
1. 完成性能优化方案设计
2. 准备技术分享材料
3. Code Review团队代码
4. 与产品团队对齐需求

## 风险与挑战
- 人力资源紧张，可能影响部分KR达成
- 新技术学习需要投入较多时间
- 跨部门协作依赖关系复杂

## 支持需求
- 需要更多学习时间和资源支持
- 希望获得技术专家的指导
- 需要管理层协调跨部门资源`,
  },
  {
    id: 'code-review',
    name: '代码评审',
    content: `# 代码评审清单

## 基本信息
- **PR编号**：#1234
- **提交者**：张开发
- **评审者**：李资深
- **评审时间**：${getDate()}
- **涉及模块**：用户认证模块

## 代码质量评估

### 1. 代码规范性 ✅
- [x] 符合团队代码规范
- [x] 命名清晰，语义明确
- [x] 注释充分，逻辑清晰
- [x] 无明显的代码异味

**评分：9/10**

### 2. 功能正确性 ✅
- [x] 实现了预期功能
- [x] 边界条件处理正确
- [x] 错误处理完善
- [x] 无明显Bug

**评分：8/10**

### 3. 性能考虑 ⚠️
- [x] 算法时间复杂度合理
- [x] 无不必要的资源消耗
- [ ] 数据库查询需要优化
- [x] 缓存策略合理

**评分：7/10**
**建议**：建议对用户查询添加索引，避免全表扫描

### 4. 安全性 ✅
- [x] 输入验证充分
- [x] SQL注入防护
- [x] XSS攻击防护
- [x] 敏感信息加密

**评分：9/10**

### 5. 可维护性 ✅
- [x] 代码结构清晰
- [x] 模块职责明确
- [x] 易于扩展
- [x] 测试覆盖充分

**评分：8/10**

## 详细意见

### 主要问题
1. **性能问题**（优先级：高）
   - 文件：\`src/services/user.service.ts\`
   - 行号：Line 45-52
   - 问题：用户列表查询未使用索引，大数据量时会很慢
   - 建议：在user表的email字段添加索引

2. **代码重复**（优先级：中）
   - 文件：\`src/controllers/auth.controller.ts\`
   - 行号：Line 78-95, Line 120-137
   - 问题：token验证逻辑重复
   - 建议：提取为公共方法

### 优点
1. 代码结构清晰，易于理解
2. 错误处理完善，考虑了多种异常情况
3. 测试用例覆盖充分，质量较高
4. 注释详细，有助于后续维护

### 改进建议
1. 建议使用TypeScript的类型守卫增强类型安全
2. 可以考虑使用装饰器简化路由定义
3. 建议添加性能监控埋点

## 测试情况
- 单元测试：✅ 通过（覆盖率：82%）
- 集成测试：✅ 通过
- E2E测试：✅ 通过
- 性能测试：⚠️ 需要优化

## 总体评价
**评分：8.2/10**

代码整体质量较高，功能实现正确，安全性考虑周全。主要需要关注性能优化问题，特别是数据库查询部分。建议修改后重新提交评审。

## 决定
- [ ] 批准合并
- [x] 需要修改后重新评审
- [ ] 拒绝合并

## 后续行动
1. 优化数据库查询，添加索引
2. 重构重复代码
3. 性能测试通过后重新提交`,
  },
];

export function getRandomTemplate(): DecoyTemplate {
  return decoyTemplates[Math.floor(Math.random() * decoyTemplates.length)];
}

export function getTemplateById(id: string): DecoyTemplate | undefined {
  return decoyTemplates.find(t => t.id === id);
}

